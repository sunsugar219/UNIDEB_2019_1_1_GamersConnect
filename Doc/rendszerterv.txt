Gamers Connect
Rendszerterv

A rendszer célja
Az E-Sport világában fontos az online közösségépítés, viszont egyelőre ez
csak szétszórtan van biztosítva. Egy olyan platform létrehozása a célunk, 
amely bármely E-Sportoló számára biztosít kapcsolatot a többi E-Sportolóval, 
a választott játéktól függetlenül, akár több sportágban is. Ehhez tervezzük
egy olyan közösségi média applikáció létrehozását, melynek az üzenőfalán
megosztásra kerülhetnek közelgő streamek, bajnokságok és a sportolók egyéb 
részvételi szándéka, hogy így vonzanak támogatókat, új csapattársakat, 
közönséget. A felhasználók közötti kapcsolatot egyirányú, illetve kétirányú
kapcsolatokra tervezzük bontani, így a privát szférát is biztosítjuk
a felhasználók számára.

Projekt terv
-Projektszerepkörök, felelősségek
-Projektmunkások és felelősségeik
-Ütemterv
-Mérföldkövek
Felhasználói felületek létrehozása: november 4.
Navigáció és menü: november 11.
Adatbázis létrehozása: november 18.
Adatbázis lekérdezések megírása: november 25.
Egyéb szükséges Java kód megírása: december 2.
Szükséges változtatások, program végleges verziója: december 9.

Üzleti folyamatok modellje
-Üzleti szereplők
-Üzleti folyamatok
-Üzleti entitások

Követelmények
-Funkcionális követelmények:
- Adatok megfelelő tárolása
- Adatok megfelelő leképezése
- Adatok valós idejű változása
- Adatok szinkronizációja
- Adatoknak megfelelően UI változása
- Felhasználók közötti kommunikáció a tervezettnek megfelelő működése
- Az alkalmazás és a Firebase közötti megfelelő kapcsolat

-Nem funkcionális követelmények:
- Könnyű olvashatóság
- Áttekinthetőség
- Egyértelmű navigáció
- 24 órás rendelkezésre állás

-Törvényi előírások, szabványok: 
- Felhasználók adatainak titkosításáról kell gondoskodni
- GDPR-nak megfelelően hozzájárulást kell kérni, hogy tárolhassuk az adatokat
- Felhasználókat tájékoztatni kell az adataik felhasználásáról

Funkcionális terv
-Rendszerszereplők
-Rendszerhasználati esetek és lefutásaik
-Határosztályok
-Menü-hierarchiák
-Képernyőtervek

Fizikai környezet
-Vásárolt softwarekomponensek és külső rendszerek
-Hardver és hálózatitopológia
-Fizikai alrendszerek
-Fejlesztő eszközök
-Keretrendszer (pl. Spring)

Absztrakt domain modell
-Domain specifikáció, fogalmak
-Absztrakt komponensek, ezek kapcsolatai

Architekturális terv
-Egy architekturális tervezési minta: 
MVVM architekturális mintát követünk: Model-View-ViewModel, 
az Android fejlesztői szokásoknak megfelelően.
-Az alkalmazás rétegei, fő komponensei, ezek kapcsolatai
-Változások kezelése
-Rendszer bővíthetősége
-Biztonsági funkciók

Adatbázis terv
-Logikai adatmodell
-Tárolt eljárások
-Fizikai adatmodellt legeneráló SQL szkript

Implementációs terv
-Perzisztencia-osztályok
-Üzleti logika osztályai
-Kliensoldal osztályai

Tesztterv
- Felhasználói felület: megfelelő, minden látható és esztétikus függőleges és vízszintes elrendezésben is
- Navigáció: minden navigációs művelet a kívánt célállapotot eredményezi
- Menü: minden felületről minden kívánt felület elérhető a menün keresztül
- Adatbázis: megfelelően van modellezve, minden adat szerepel benne
- Firebase: az adatbázis megfelelően tárolható Firebase-ben
- Adatbázis lekérdezések: megfelelő eredményt adják vissza a lekérdezések
- Adatbázis, új adat: új adat megfelelően kerül tárolásra
- Adatbázis, változtatás: változtatás megfelelően történik az adatbázisban
- Adatok változásának érzékelése: a felhasználói felület az aktuális adatoknak megfelel realtime
- Adatok törlése: a kitörölhető adatok nem generálnak hibát az alkalmazásban
- JUnit tesztek: nem jeleznek hibát egyik osztályban sem

Telepítési terv
- Tesztek sikerességének biztosítása
- APK csomag létrehozása
- Google account létrehozása a csapat számára PlayStore-on
- Applikáció leírása, vonzóvá tétele
- APK feltöltése

Karbantartási terv
- Aktuális Android verziónak megfelelő változtatások implementálása
- Felhasználói vélemények alapján fejlesztések végrehajtása
- Google AdWords implementálása
- Aktuális AdWords policy-nak megfelelő változtatások implementálása
